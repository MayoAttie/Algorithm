using System;
using System.Linq;

public class Solution {
    // 최대공약수를 구하는 함수
    private int GetGcd(int[] arr) {
        int result = arr[0];
        for (int i = 1; i < arr.Length; i++) {
            int a = result;
            int b = arr[i];

            // 유클리드 호제법을 사용하여 최대공약수 계산
            while (b != 0) {
                int r = a % b;
                a = b;
                b = r;
            }

            result = a;
        }
        return result;
    }

    // 주어진 두 배열의 최대공약수를 계산하는 함수
    public int solution(int[] arrayA, int[] arrayB) {
        int answer = 0;

        // 각 배열의 최대공약수를 계산
        int AsGcd = GetGcd(arrayA);
        int BsGcd = GetGcd(arrayB);
        bool isA_Check = false;
        bool isB_Check = false;

        // arrayB의 모든 요소가 AsGcd로 나누어 떨어지는지 확인
        if (arrayB.All(num => num % AsGcd != 0))
            isA_Check = true;
        // arrayA의 모든 요소가 BsGcd로 나누어 떨어지는지 확인
        if (arrayA.All(num => num % BsGcd != 0))
            isB_Check = true;

        // 각 배열이 서로 소수인 경우, 두 최대공약수 중 큰 값을 선택
        if (isA_Check || isB_Check)
            answer = Math.Max(AsGcd, BsGcd);
        // arrayA가 서로 소수인 경우, AsGcd를 선택
        else if (isA_Check)
            answer = AsGcd;
        // arrayB가 서로 소수인 경우, BsGcd를 선택
        else if (isB_Check)
            answer = BsGcd;

        return answer;
    }
}