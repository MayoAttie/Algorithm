using System;

// 깊이우선탐색
public class Solution {
    string target = ""; // 목표 단어를 저장하기 위한 변수
    int count = -1; // 생성된 문자열의 개수를 세기 위한 변수
    int answer = 0; // 생성된 목표 단어와 일치하는 문자열의 개수를 저장하기 위한 변수
    string pivot = "AEIOU"; // 모음 문자를 저장하는 문자열

    public int Solution(string word) {
        target = word; // 주어진 단어를 목표 단어로 설정
        Dfs(""); // DFS 탐색 시작
        return answer; // 생성된 목표 단어와 일치하는 문자열의 개수 반환
    }
    
    void Dfs(string word)
    {
        count++; // 문자열을 생성할 때마다 생성된 문자열의 개수를 증가

        if(word == target) // 생성된 문자열과 목표 단어가 일치하는 경우
        {
            answer = count; // 결과 변수에 생성된 문자열의 개수를 저장하고
            return; // 탐색을 종료합니다.
        }
        if(word.Length >= 5) // 생성된 문자열의 길이가 5 이상인 경우 (최대 길이가 5로 제한되었음)
            return; // 탐색을 종료합니다.
        
        // 현재 문자열에 모음 문자를 하나씩 추가하여 다음 문자열을 생성하고 DFS 탐색을 진행합니다.
        for(int i = 0; i < pivot.Length; i++)
        {
            Dfs(word + pivot[i]);
        }
    }
}
