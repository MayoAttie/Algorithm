using System;
using System.Collections.Generic;

public class Solution
{
    public long[] solution(long[] numbers)
    {
        // 결과를 저장할 List<long> 객체를 생성합니다.
        List<long> answer = new List<long>();

        // 입력된 numbers 배열의 모든 요소를 확인합니다.
        for (int i = 0; i < numbers.Length; i++)
        {
            // 현재 숫자가 짝수인 경우
            if (numbers[i] % 2 == 0)
            {
                // 현재 숫자에 1을 더한 값을 answer에 추가합니다.
                answer.Add(numbers[i] + 1);
            }
            // 현재 숫자가 홀수인 경우
            else
            {
                // 현재 숫자와 가장 가까운 2의 거듭제곱 수를 찾습니다.
                long temp = 1;
                while (true)
                {
                    // 비트 AND 연산을 사용하여 현재 숫자와 temp를 비교합니다.
                    // 현재 숫자와 temp의 이진 표현에서 1이 동시에 존재하는지 확인합니다.
                    if ((numbers[i] & temp) == 0)
                        break;

                    // 2의 거듭제곱 수를 찾기 위해 temp를 2배로 증가시킵니다.
                    temp *= 2;
                }

                // temp를 2로 나누어서 현재 숫자와 가장 가까운 2의 거듭제곱 수를 찾습니다.
                temp = temp / 2;

                // 현재 숫자에 찾은 2의 거듭제곱 수를 더한 값을 answer에 추가합니다.
                answer.Add(numbers[i] + temp);
            }
        }

        // List<long>인 answer를 배열로 변환하여 반환합니다.
        return answer.ToArray();
    }
}