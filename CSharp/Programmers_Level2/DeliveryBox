using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int[] order) {
        int index = 0; // 현재 확인 중인 order 배열의 인덱스를 나타내는 변수
        Stack<int> stk = new Stack<int>(); // 스택을 이용하여 압축된 상자 번호를 저장하는 자료구조

        for (int i = 0; i < order.Length; i++) 
        {
            int box = i + 1; // 현재 확인 중인 상자 번호

            if (box == order[index])
                index++; // 현재 확인 중인 상자와 order 배열의 값이 일치하면 다음 상자를 확인하기 위해 index를 증가시킴
            else
                stk.Push(box); // 현재 확인 중인 상자와 order 배열의 값이 일치하지 않으면, 압축된 상자로 간주하고 스택에 저장함

            while (stk.Count > 0 && stk.Peek() == order[index]) 
            {
                stk.Pop(); // 스택의 맨 위에 있는 상자 번호와 order 배열의 값이 일치하면 해당 상자를 압축 해제하고 스택에서 제거
                index++; // 다음 상자를 확인하기 위해 index를 증가시킴
            }
        }

        return index; // 최종적으로 index 값을 반환하여 압축되지 않은 상자의 개수를 구함
    }
}