using System;
using System.Collections.Generic;

public class Solution {
    public double[] solution(int k, int[,] ranges) {
        List<double> answer = new List<double>(); // 결과를 담을 리스트 생성
        List<int> collatzList = new List<int>();
        collatzList.Add(k); // 콜라츠 수열의 초항인 k를 리스트에 추가

        while (k != 1)
        {
            if (k % 2 == 0) // 짝수인 경우
                k /= 2; // 2로 나누기
            else
            {
                k *= 3; // 홀수인 경우 3을 곱하고 1을 더하기
                k++;
            }

            collatzList.Add(k); // 콜라츠 수열에 다음 항 추가
        }

        List<double> collatzAverages = new List<double>(collatzList.Count - 1); // 콜라츠 수열의 항들의 평균을 저장할 리스트 생성

        for (int i = 0; i < collatzList.Count - 1; i++)
        {
            collatzAverages.Add((double)(collatzList[i] + collatzList[i + 1]) / 2); // 콜라츠 수열 항들의 평균을 계산하여 리스트에 추가
        }

        for (int i = 0; i < ranges.GetLength(0); i++)
        {
            double result = 0;
            int start = ranges[i, 0]; // 범위의 시작 인덱스
            int end = collatzList.Count + ranges[i, 1] - 1; // 범위의 끝 인덱스

            if (start > end)
                answer.Add(-1); // 시작 인덱스가 끝 인덱스보다 크다면 해당 범위는 유효하지 않으므로 결과에 -1 추가
            else
            {
                for (int j = start; j < end; j++)
                {
                    result += collatzAverages[j]; // 범위 내의 평균 값을 더하여 결과 계산
                }

                answer.Add(result); // 결과 리스트에 결과 추가
            }
        }

        return answer.ToArray(); // 리스트를 배열로 변환하여 반환
    }
}