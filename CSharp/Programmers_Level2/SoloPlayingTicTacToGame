using System;
using System.Collections.Generic;

public class Coordinate {
    public int X { get; }
    public int Y { get; }

    public Coordinate(int x, int y) {
        X = x;
        Y = y;
    }
}

public class Solution {
    public int solution(string[] board) {
        int n = board.Length;
        List<Coordinate> oList = new List<Coordinate>();
        List<Coordinate> xList = new List<Coordinate>();

        // 주어진 게임판 정보를 순회하며 'O'와 'X'의 좌표를 저장
        for (int x = 0; x < n; x++) {
            for (int y = 0; y < n; y++) {
                if (board[x][y] == 'O')
                    oList.Add(new Coordinate(x, y));
                else if (board[x][y] == 'X')
                    xList.Add(new Coordinate(x, y));
            }
        }
        
        // 'O'와 'X'의 개수에 따라 규칙을 체크하고 결과 반환
        if (oList.Count < xList.Count || oList.Count >= (xList.Count + 2))
            return 0;

        // 'O'의 좌표를 순회하며 규칙 체크
        foreach (var pos in oList) {
            int x = pos.X;
            int y = pos.Y;

            // 현재 좌표가 규칙을 어길 경우
            if (IsWin(board, x, y) && xList.Count != (oList.Count - 1))
                return 0;
        }

        // 'X'의 좌표를 순회하며 규칙 체크
        foreach (var pos in xList) {
            int x = pos.X;
            int y = pos.Y;

            // 현재 좌표가 규칙을 어길 경우
            if (IsWin(board, x, y) && xList.Count != oList.Count)
                return 0;
        }

        // 모든 검사를 통과한 경우 규칙을 지켜서 진행한 것으로 간주
        return 1;
    }
    
    bool IsWin(string[] board, int x, int y) 
    {
        int n = board.Length;
        int leftY = (y - 1 + n) % n;
        int rightY = (y + 1) % n;
        
        // 가로로 같은 표시가 있는지 확인
        if (board[x][y] == board[x][leftY] && board[x][y] == board[x][rightY])
            return true;
        
        int upX = (x - 1 + n) % n;
        int downX = (x + 1) % n;
        
        // 세로로 같은 표시가 있는지 확인
        if (board[x][y] == board[upX][y] && board[x][y] == board[downX][y])
            return true;
        
        // 대각선으로 같은 표시가 있는지 확인
        if ((board[x][y] == board[upX][leftY] && board[x][y] == board[downX][rightY]) ||
            (board[x][y] == board[upX][rightY] && board[x][y] == board[downX][leftY]))
            return true;
        
        return false;
    }
}