using System;
using System.Collections.Generic;

public class Solution {
    public int[] solution(int[] numbers) {
        int[] answer = new int[numbers.Length]; // 결과값을 저장할 배열

        Stack<int> stk = new Stack<int>(); // 더 큰 수를 찾기 위해 인덱스를 저장할 스택

        // 배열 numbers를 순회하면서 뒤에 더 큰 수를 찾기
        for (int i = 0; i < numbers.Length; i++) {
            // 스택이 비어있지 않고, 스택의 top에 해당하는 요소보다 현재 요소가 크다면
            while (stk.Count > 0 && numbers[stk.Peek()] < numbers[i]) {
                // 스택의 top에 해당하는 인덱스에 현재 요소의 값을 저장하고 스택에서 제거
                answer[stk.Peek()] = numbers[i];
                stk.Pop();
            }
            // 현재 인덱스를 스택에 저장
            stk.Push(i);
        }

        // 스택에 남은 인덱스들에 대응하는 결과값을 -1로 설정 (뒤에 더 큰 수가 없는 경우)
        while (stk.Count > 0) {
            answer[stk.Peek()] = -1;
            stk.Pop();
        }

        return answer; // 결과값을 반환
    }
}