#include <string>
#include <vector>

using namespace std;

int DP_Algorithm(int N, int number)
{
    vector<vector<int>> dp(9); 

    
    for (int i = 1; i <= 8; ++i)
    {
        int num = 0;
        for (int j = 0; j < i; ++j)
            num = num * 10 + N;
            
        dp[i].push_back(num);
    }

   
    for (int i = 1; i <= 8; ++i) 
    {
        for (int j = 1; j < i; ++j) 
        {
            for (int k = 0; k < dp[j].size(); ++k) 
            {
                for (int l = 0; l < dp[i - j].size(); ++l)
                {
                    int num1 = dp[j][k];
                    int num2 = dp[i - j][l];
                    dp[i].push_back(num1 + num2);
                    dp[i].push_back(num1 - num2);
                    dp[i].push_back(num1 * num2);
                    if (num2 != 0)
                        dp[i].push_back(num1 / num2);
                }
            }
        }

        
        for (int j = 0; j < dp[i].size(); ++j)
        {
            if (dp[i][j] == number)
                return i;
        }
    }

    
    return -1;
}

int solution(int N, int number) {
    
    return DP_Algorithm(N, number);;
}