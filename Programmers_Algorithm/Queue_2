#include <string>
#include <vector>
#include <queue>
#include <iostream>
using namespace std;

int solution(vector<int> priorities, int location) {
    int answer = 0;
    queue<pair<int, int>> que;
    priority_queue<int> pq;

    for (int i = 0; i < priorities.size(); i++) {
        que.push(make_pair(i, priorities[i]));
        pq.push(priorities[i]);
    }

    while (!que.empty())
    {
        int curIndex = que.front().first;
        int curPriority = que.front().second;
        que.pop();

        if (curPriority < pq.top())
        {
            que.push(make_pair(curIndex, curPriority));
        }
        else 
        {
            pq.pop();
            answer++;
            if (curIndex == location)
                break;
        }
    }

    return answer;
}