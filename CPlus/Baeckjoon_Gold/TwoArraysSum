#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() 
{
    int T;
    cin >> T;
    int n,m;
    cin >> n;
    vector<int> A(n);
    for (int i = 0; i < n; i++) 
    {
        cin >> A[i];
    }
    cin >> m;
    vector<int> B(m);
    for (int i = 0; i < m; i++) 
    {
        cin >> B[i];
    }

    vector<int> sumA;
    vector<int> sumB;

    for (int i = 0; i < n; i++)
    {
        int sum = 0;
        for (int j = i; j < n; j++)
        {
            sum += A[j];
            sumA.push_back(sum);
        }
    }

    for (int i = 0; i < m; i++) 
    {
        int sum = 0;
        for (int j = i; j < m; j++) 
        {
            sum += B[j];
            sumB.push_back(sum);
        }
    }

    sort(sumA.begin(), sumA.end());
    sort(sumB.begin(), sumB.end());

    long long cnt = 0;
    int left = 0;
    int right = sumB.size() - 1;

    while (left < sumA.size() && right >= 0)
    {
        int sum = sumA[left] + sumB[right];

        if (sum == T) 
        {
            int a = sumA[left];
            int b = sumB[right];
            long long leftCnt = 0;
            long long rightCnt = 0;

            while (left < sumA.size() && sumA[left] == a)
            {
                leftCnt++;
                left++;
            }
            while (right >= 0 && sumB[right] == b)
            {
                rightCnt++;
                right--;
            }
            cnt += leftCnt * rightCnt;
        }
        else if (sum < T) 
            left++;
        else if (sum > T) 
            right--;
    }

    cout << cnt;

    return 0;
}