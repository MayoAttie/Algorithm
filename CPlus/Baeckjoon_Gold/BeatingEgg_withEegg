#include <iostream>
#include <unordered_map>
#include <vector>
#include <string>
#include <algorithm>
#include <numeric>
#include <iomanip>
#include <set>

#define ll long long
#define dic unordered_map

using namespace std;

int n;
vector<pair<int, int>> arr;
int answer = 0;

void dfs(int idx)
{
    if (idx >= n)
    {
        return;
    }

    if (arr[idx].first <= 0)
    {
        if(idx+1 < n)
            dfs(idx + 1);
        return;
    }

    bool isHit = false;

    for (int i = 0; i < n; i++)
    {
        if (i == idx || arr[i].first <= 0)
            continue;   

        arr[i].first -= arr[idx].second;
        arr[idx].first -= arr[i].second;

        isHit = true;

        int cnt = 0;
        for (int i = 0; i < n; i++)
        {
            if (arr[i].first <= 0)
                cnt++;
        }
        answer = max(answer, cnt);


        dfs(idx + 1);

        arr[i].first += arr[idx].second;
        arr[idx].first += arr[i].second;
    }

    if (!isHit)
        dfs(idx + 1);
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    cin >> n;
    arr.resize(n);
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i].first >> arr[i].second;
    }

    dfs(0);
    cout << answer;

    return 0;
}