#include <iostream>
#include <vector>
#include <deque>	
using namespace std;

class Snake
{
	vector<vector<int>> field;
	int N, K, L;
	deque<pair<int, int>> snake;
	vector<pair<int, char>> command;
	char direction;
	int dx[4] = { -1,0,1,0 };
	int dy[4] = { 0,1,0,-1 };

public:
	Snake(int N, int K)
	{
		this->N = N;
		this->K = K;
		field.resize(N, vector<int>(N,0));
		snake.push_back({ 0,0 });
		field[0][0] = 2;
		direction = 'R';
		input();
	}

	int Play()
	{
		int time = 0;
		int idx = 0;
		while (true)
		{
			time++;
			
			if (!Move())
				break;

			if (idx < L && command[idx].first == time)
			{
				ChangeDirection(command[idx].second);
				idx++;
			}
		}

		return time;
	}

private:
	void input()
	{
		for (int i = 0; i < K; i++)
		{
			int a, b;
			cin >> a >> b;
			field[a-1][b-1] = 1;
		}
		cin >> L;
		command.resize(L);
		for (int i = 0; i < L; i++)
		{
			cin >> command[i].first >> command[i].second;
		}
	}

	bool Move()
	{
		int x = snake.front().first;
		int y = snake.front().second;

		int nx = x + dx[GetDirection()];
		int ny = y + dy[GetDirection()];

		if (nx < 0 || nx >= N || ny < 0 || ny >= N || field[nx][ny] == 2)
			return false;

		snake.push_front({ nx,ny });
		if (field[nx][ny] != 1)
		{
			field[snake.back().first][snake.back().second] = 0;
			snake.pop_back();
		}
		field[nx][ny] = 2;

		return true;
	}

	int GetDirection()
	{
		if (direction == 'U')
			return 0;
		else if (direction == 'R')
			return 1;
		else if (direction == 'D')
			return 2;
		else
			return 3;
	}

	void ChangeDirection(char turn)
	{
		if (turn == 'L')
		{
			if (direction == 'U')
				direction = 'L';
			else if (direction == 'R')
				direction = 'U';
			else if (direction == 'D')
				direction = 'R';
			else 
				direction = 'D';
		}
		else
		{
			if (direction == 'U')
				direction = 'R';
			else if (direction == 'R')
				direction = 'D';
			else if (direction == 'D')
				direction = 'L';
			else
				direction = 'U';
		}
	}

}; 

int main()
{
	int N , K;
	cin >> N >> K;
	Snake func = Snake(N, K);
	cout << func.Play();
}