#include <iostream>
#include <map>
#include <string>
#include <algorithm>
#include <vector>
#include <set>
#include <cctype>
using namespace std;

vector<int> convertOrders(const vector<int>& arr)
{
    int len = arr.size();
    vector<int> tmp = arr;
    map<int, int> dic;

    sort(tmp.begin(), tmp.end());
    for (int i = 0; i < len; i++)
    {
        dic[tmp[i]] = i;
    }

    vector<int> result(len,0);
    for (int i = 0; i < len; i++)
    {
        result[i] = dic[arr[i]];
    }
    return result;
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    int n, m;
    cin >> n >> m;
    vector<vector<int>> space(n, vector<int>(m));

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            cin >> space[i][j];;
        }
    }

    map<vector<int>, int> dic;
    for (int i = 0; i < n; i++)
    {
        vector<int> tmp = convertOrders(space[i]);
        dic[tmp]++;
    }

    long long answer = 0;
    for (auto& i : dic)
    {
        long long cnt = i.second;
        answer += (long long)(cnt * (cnt - 1) / 2);
    }

    cout << answer;


    return 0;
}