#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    int N;
    cin >> N;

    vector<int> num(N);
    for (int i = 0; i < N; ++i) 
    {
        cin >> num[i];
    }

    vector<int> dp(N, 1);

    for (int i = 1; i < N; ++i) 
    {
        for (int j = 0; j < i; ++j) 
        {
            if (num[i] > num[j]) 
                dp[i] = max(dp[i], dp[j] + 1);
            
        }
    }

    cout << *max_element(dp.begin(), dp.end()) << '\n';

    int order = *max_element(dp.begin(), dp.end());
    vector<int> arr;

    for (int i = N - 1; i >= 0; --i) 
    {
        if (dp[i] == order) 
        {
            arr.push_back(num[i]);
            order -= 1;
        }
    }

    reverse(arr.begin(), arr.end());

    for (int i : arr) 
    {
        cout << i << " ";
    }

    return 0;
}