#include <iostream>
#include <vector>

using namespace std;

char arr[51][51];
bool visit[51][51];
int n, m;
int dx[] = { -1, 0, 1, 0 };
int dy[] = { 0, 1, 0, -1 };
int startX, startY;
bool isCycle;

void dfs(int x, int y, char color, int cnt) 
{
    if (cnt >= 4 && x == startX && y == startY) 
        isCycle = true;

    for (int i = 0; i < 4; i++) 
    {
        int nx = x + dx[i];
        int ny = y + dy[i];

        if (nx < 0 || nx >= n || ny < 0 || ny >= m || visit[nx][ny] || color != arr[nx][ny]) continue;

        visit[nx][ny] = true;
        dfs(nx, ny, color, cnt + 1);
        visit[nx][ny] = false;
    }
}

int main() 
{
    cin >> n >> m;

    for (int i = 0; i < n; i++) 
    {
        string str;
        cin >> str;
        for (int j = 0; j < m; j++) 
        {
            arr[i][j] = str[j];
        }
    }

    for (int i = 0; i < n; i++) 
    {
        for (int j = 0; j < m; j++) 
        {
            startX = i;
            startY = j;
            isCycle = false;
            dfs(i, j, arr[i][j], 1);
            if (isCycle)
            {
                cout << "Yes" << endl;
                return 0;
            }
        }
    }
    cout << "No" << endl;
    return 0;
}