#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<vector<pair<int, int>>> dp;

pair<int, int> solution(vector<int>& arr, int i, int j)
{
	if (dp[i][j].first != -1 && dp[i][j].second != -1)
		return dp[i][j];

	if (i == j)
		return dp[i][j] = { arr[i], 0 };

	pair<int, int> result_1 = solution(arr, i + 1, j);
	int score1 = result_1.second + arr[i];

	pair<int, int> result_2 = solution(arr, i, j - 1);
	int score2 = result_2.second + arr[j];

	if (score1 > score2)
		return dp[i][j] = { score1, result_1.first };
	else
		return dp[i][j] = { score2, result_2.first };
}

int main()
{
	vector<int> arr;
	int T;
	cin >> T;
	while (T--)
	{
		int N;
		cin >> N;
		arr.resize(N);

		for (int i = 0; i < N; i++)
		{
			cin >> arr[i];
		}

		dp.assign(N, vector<pair<int, int>>(N, { -1,-1 }));

		pair<int, int> answer = solution(arr, 0, N - 1);
		cout << answer.first << '\n';
	}
}