#include<iostream>
#include<vector>

using namespace std;

const long long mod = 1000000007;
long long n;

// 두 행렬을 곱하는 함수
vector<vector<long long>> multi(vector<vector<long long>>& a, vector<vector<long long>>& b)
{
    vector<vector<long long>> c(2, vector<long long>(2));

    for (int i = 0; i < 2; i++)
    {
        for (int j = 0; j < 2; j++)
        {
            for (int k = 0; k < 2; k++)
            {
                // 각 원소를 누적하여 계산하고 mod로 나눠줌
                c[i][j] += a[i][k] * b[k][j];
                c[i][j] %= mod;
            }
        }
    }
    return c;
}

int main()
{
    // 입력으로 피보나치 수의 인덱스인 n을 받음
    cin >> n;

    // 초기 행렬을 담은 변수 answer
    vector<vector<long long>> answer = { {1, 0}, {0, 1} };

    // 기본 행렬을 담은 변수 a
    vector<vector<long long>> a = { {1, 1}, {1, 0} };

    // 분할정복을 이용하여 피보나치 수를 계산
    while (n > 0)
    {
        // 현재 지수가 홀수이면 answer에 a를 곱함
        if (n % 2 == 1)
            answer = multi(answer, a);

        // a를 제곱하여 다음 지수를 계산
        a = multi(a, a);

        // 지수를 반으로 나눠줌
        n /= 2;
    }

    // 결과 출력
    cout << answer[0][1] << '\n';
}