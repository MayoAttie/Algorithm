#include <iostream>
using namespace std;

// 하노이 탑 문제를 해결하는 함수
// n: 이동할 원반의 개수
// start: 출발 탑 번호
// end: 목적 탑 번호
void hanoi_tower(int n, int start, int end)
{
    // 기저 조건: 원반이 하나일 때, 직접 출력하고 종료
    if (n == 1)
    {
        cout << start << " " << end << '\n';
        return;
    }

    // 1. n-1개의 원반을 start에서 end를 제외한 다른 탑으로 이동
    hanoi_tower(n - 1, start, 6 - start - end);

    // 2. 남은 하나의 원반을 start에서 end로 이동
    cout << start << " " << end << '\n';

    // 3. 이동한 n-1개의 원반을 다시 다른 탑에서 end로 이동
    hanoi_tower(n - 1, 6 - start - end, end);
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int n;
    cin >> n;

    // 이동 횟수 출력
    cout << (1 << n) - 1 << '\n';

    // 하노이 탑 문제 해결 함수 호출
    hanoi_tower(n, 1, 3);

    return 0;
}