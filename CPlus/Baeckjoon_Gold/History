#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

const int INF = 987654321;

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
		
	int n, k;
	cin >> n >> k;

	vector<vector<int>> graph(n + 1, vector<int>(n + 1, INF));

	for (int i = 1; i <= n; i++)
	{
		graph[i][i] = 0;
	}

	for (int i = 0; i < k; i++)
	{
		int a, b;
		cin >> a >> b;
		graph[a][b] = 1;
	}

	for (int m = 1; m <= n; m++)
	{
		for (int i = 1; i <= n; i++)
		{
			for (int j = 1; j <= n; j++)
			{
				if (graph[i][j] > graph[i][m] + graph[m][j])
				{
					graph[i][j] = graph[i][m] + graph[m][j];
				}
			}
		}
	}

	int s;
	cin >> s;

	for (int i = 0; i < s; i++)
	{
		int a, b;
		cin >> a >> b;

		if (graph[a][b] == INF && graph[b][a] == INF)
			cout << 0 << '\n';
		else if (graph[a][b] != INF)
			cout << -1 << '\n';
		else
			cout << 1 << '\n';
	}
}