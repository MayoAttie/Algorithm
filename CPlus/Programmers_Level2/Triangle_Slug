#include <vector>

using namespace std;

vector<int> solution(int n) {
    vector<vector<int>> arr(n, vector<int>(n, 0)); // 삼각형 배열 생성
    int curnum = 1; // 현재 채우는 값
    int x = -1; // 시작 위치 x 좌표
    int y = 0; // 시작 위치 y 좌표

    vector<int> answer; // 결과 배열

    for (int i = 0; i < n; i++) {
        for (int j = i; j < n; j++) {
            // 이동 방향에 따라 좌표 업데이트
            if (i % 3 == 0)
                x += 1;
            else if (i % 3 == 1)
                y += 1;
            else {
                x -= 1;
                y -= 1;
            }
            arr[x][y] = curnum; // 배열에 값 채우기
            curnum += 1; // 다음 값으로 업데이트
        }
    }

    // 배열을 순회하면서 0이 아닌 값들을 결과 배열에 추가
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (arr[i][j] != 0)
                answer.push_back(arr[i][j]);
        }
    }

    return answer;
}