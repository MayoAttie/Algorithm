#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

class BallMove
{
    long long n, m;
    vector<vector<int>> qr;
    long long xMin, xMax;
    long long yMin, yMax;
    long long answer;
public:
    BallMove(long long n, long long m, long long x, long long y, vector<vector<int>> queries)
    {
        this->n = n;
        this->m = m;
        qr = queries;
        xMin = x;
        xMax = x;
        yMin = y;
        yMax = y;
    }
    long long solve()
    {
        roopQuery();
        return answer;
    }
private:
    void roopQuery()
    {
        bool checkOutRange = false;
        for (auto it = qr.rbegin(); it != qr.rend(); ++it)
        {
            int type = (*it)[0];
            long long dist = (*it)[1];

            if (type == 0)
            {
                yMax += dist;
                if (yMax >= m)
                    yMax = m - 1;
                if (yMin != 0)
                    yMin += dist;
            }
            else if (type == 1)
            {
                yMin -= dist;
                if (yMin < 0)
                    yMin = 0;
                if (yMax != m - 1)
                    yMax -= dist;
            }
            else if (type == 2)
            {
                xMax += dist;
                if (xMax >= n)
                    xMax = n - 1;
                if (xMin != 0)
                    xMin += dist;
            }
            else if (type == 3)
            {
                xMin -= dist;
                if (xMin - dist < 0)
                    xMin = 0;
                if (xMax != n - 1)
                    xMax -= dist;
            }

            if (xMin > n - 1 || xMax <0 || yMin >m - 1 || yMax < 0)
            {
                checkOutRange = true;
                break;
            }
        }
        if (checkOutRange)
            answer = 0;
        else
            answer = (xMax - xMin + 1) * (yMax - yMin + 1);
    }
};

long long solution(int n, int m, int x, int y, vector<vector<int>> queries)
{
    long long answer = -1;
    BallMove func(n, m, x, y, queries);
    answer = func.solve();
    return answer;
}