#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int binary_search(int target, vector<int>& data) 
{
    int start = 0;
    int end = data.size() - 1;
    int result = -1;
    while (start <= end) 
    {
        int mid = (start + end) / 2;
        if (data[mid] < target) 
        {
            result = mid;
            start = mid + 1;
        }
        else 
            end = mid - 1;
    }
    return result;
}

int main() 
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int T;
    cin >> T;

    while (T--)
    {
        int n, m;
        cin >> n >> m;
        vector<int> nArr(n);
        vector<int> mArr(m);

        for (int i = 0; i < n; ++i)
        {
            cin >> nArr[i];
        }
        for (int i = 0; i < m; ++i)
        {
            cin >> mArr[i];
        }

        sort(nArr.begin(), nArr.end());
        sort(mArr.begin(), mArr.end());

        int count = 0;

        for (int i : nArr)
        {
            count += binary_search(i, mArr) + 1;
        }

        cout << count << "\n";
    }

    return 0;
}