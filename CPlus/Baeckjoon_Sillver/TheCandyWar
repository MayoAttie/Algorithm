#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;


bool checkResult(vector<int>& arr)
{
    bool isAnswer = true;
    for (int i = 1; i < arr.size(); i++)
    {
        if (arr[i] != arr[0])
        {
            isAnswer = false;
            break;
        }
    }
    return isAnswer;
}

void RoofRotate(vector<int>& arr, int n)
{
    int tmp1, tmp2;
    for (int i = 0; i < n; i++) 
    {
        arr[i] /= 2;
    }
    tmp1 = arr[0];
    for (int i = 0; i < n; i++) 
    {
        if (i == 0)
        {
            arr[0] += arr[n - 1];
            continue;
        }
        tmp2 = arr[i];
        arr[i] += tmp1;
        tmp1 = tmp2;
    }
}

int main() 
{
    int t;
    cin >> t;

    while (t--)
    {
        int n;
        cin >> n;
        vector<int> arr(n);
        for (int i = 0; i < n; i++) 
        {
            cin >> arr[i];
        }

        int cnt = 0;
        if (n == 1)
        {
            cout << 0 << '\n';
            continue;
        }

        while (!checkResult(arr))
        {
            for (int i = 0; i < n; i++)
            {
                if (arr[i] % 2 != 0)
                    arr[i]++;
            }

            if (checkResult(arr))
                break;

            RoofRotate(arr, n);
            cnt++;
        }

        cout << cnt << '\n';
    }

    return 0;
}