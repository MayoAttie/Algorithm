#include <iostream>
#include <vector>
#include <algorithm>	
#include <climits>
using namespace std;

int main()
{
	int N;
	int T = 1;
	while (cin >> N)
	{
		if (N == 0)
			break;

		vector<vector<int>> graph(N,vector<int>(3));
		for (int i = 0; i < N; i++)
		{
			for (int j = 0; j < 3; j++)
			{
				cin >> graph[i][j];
			}
		}
		
		vector<vector<int>> dp(N, vector<int>(3));
		dp[0][0] = INT_MAX;
		dp[0][1] = graph[0][1];
		dp[0][2] = graph[0][1] + graph[0][2];

		for (int i = 1; i < N; i++)
		{
			dp[i][0] = min(dp[i - 1][0], dp[i - 1][1]) + graph[i][0];
			dp[i][1] = min(min(dp[i - 1][0], dp[i - 1][1]), min(dp[i - 1][2], dp[i][0])) + graph[i][1];
			dp[i][2] = min(min(dp[i - 1][1], dp[i - 1][2]), dp[i][1]) + graph[i][2];
		}

		int minCost = dp[N - 1][1];
		cout << T << ". " << minCost << '\n';
		T++;
	}
}