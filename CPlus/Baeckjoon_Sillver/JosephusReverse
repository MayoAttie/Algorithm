#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <cctype>
#include <algorithm>
#include <deque>
using namespace std;



int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int n, k, m;
    cin >> n >> k >> m;

    deque<int> dq;
    for (int i = 1; i <= n; i++)
        dq.push_back(i);

    int idx = 0;
    int cnt = 0;
    bool isTurn = true;
    while (!dq.empty())
    {
        if (cnt >= m)
        {
            isTurn = !isTurn;
            cnt = 0;
        }
        if (isTurn)
        {
            for (int i = 0; i < k - 1; i++)
            {
                dq.push_back(dq.front());
                dq.pop_front();
            }
        }
        else
        {
            for (int i = 0; i < k; i++)
            {
                dq.push_front(dq.back());
                dq.pop_back();
            }
        }
        
        idx++;
        cnt++;

        cout << dq.front() <<'\n';
        dq.pop_front();

    }

    
    return 0;
}

