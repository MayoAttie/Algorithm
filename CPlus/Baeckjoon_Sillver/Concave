#include <iostream>
#include <map>
#include <string>
#include <algorithm>
#include <vector>
#include <sstream>
using namespace std;

vector<vector<int>> board(19, vector<int>(19));

bool isWin(int x, int y, int dx, int dy)
{
    int now = board[x][y];

    for (int i = 1; i < 5; i++) 
    {
        int nx = x + dx * i;
        int ny = y + dy * i;
        if (nx < 0 || nx >= 19 || ny < 0 || ny >= 19 || board[nx][ny] != now) 
        {
            return false;
        }
    }

    int prev_x = x - dx;
    int prev_y = y - dy;
    int next_x = x + dx * 5;
    int next_y = y + dy * 5;

    if ((prev_x >= 0 && prev_x < 19 && prev_y >= 0 && prev_y < 19 && board[prev_x][prev_y] == now) ||
        (next_x >= 0 && next_x < 19 && next_y >= 0 && next_y < 19 && board[next_x][next_y] == now)) 
    {
        return false;
    }

    return true;
}
   

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    for (int i = 0; i < 19; i++)
    {
        for (int j = 0; j < 19; j++)
        {
            cin >> board[i][j];
        }
    }

    int dx[4] = { 1,0,1,-1 };
    int dy[4] = { 0,1,1,1 };


    for (int i = 0; i < 19; i++)
    {
        for (int j = 0; j < 19; j++)
        {
            if (board[i][j])
            {
                for (int d = 0; d < 4; d++)
                {
                    if (isWin(i, j, dx[d], dy[d]))
                    {
                        cout << board[i][j] << '\n' << i + 1 << ' ' << j + 1;
                        return 0;
                    }
                }
            }
        }
    }

    cout << 0;


    return 0;
}