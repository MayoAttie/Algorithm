#include <iostream>
#include <queue>
#include <vector>

using namespace std;

int main() {
    int A, K;
    cin >> A >> K;

    queue<pair<int, int>> q;
    vector<bool> visited(K + 1, false);

    q.push({ A, 0 });
    visited[A] = true;

    while (!q.empty()) 
    {
        pair<int, int> cur = q.front();
        q.pop();

        if (cur.first == K) 
        {
            cout << cur.second << endl;
            return 0;
        }

        if (cur.first * 2 <= K && !visited[cur.first * 2]) 
        {
            visited[cur.first * 2] = true;
            q.push({ cur.first * 2, cur.second + 1 });
        }

        if (cur.first + 1 <= K && !visited[cur.first + 1]) 
        {
            visited[cur.first + 1] = true;
            q.push({ cur.first + 1, cur.second + 1 });
        }
    }

    return 0;
}
