#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_map>
#include <string>
#include <climits>
using namespace std;

bool isPossible(vector<int>& arr, int target, int k)
{
    long long need = 0;
    
    for (int i : arr)
    {
        if (i < target)
            need += target - i;
        if (need > k)
            return false;
    }

    return need <= k;
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int n, k;
    cin >> n >> k;

    vector<int> arr(n);
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }

    sort(arr.begin(), arr.end());

    int left = arr[0];
    int right = arr[0] + k;
    int answer = left;

    while (left <= right)
    {
        int mid = (left + right) / 2;

        if (isPossible(arr, mid, k))
        {
            answer = mid;
            left = mid + 1;
        }
        else
            right = mid - 1;
    }

    cout << answer;
    
}