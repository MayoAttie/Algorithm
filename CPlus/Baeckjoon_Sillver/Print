#include <iostream>
#include <unordered_map>
#include <vector>
#include <string>
#include <algorithm>
#include <numeric>
#include <iomanip>

#define ll long long
#define dic unordered_map

using namespace std;

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int n;
    string cmd;
    cin >> n >> cmd;

    vector<vector<int>> board(n, vector<int>(n, 0));

    int curX = 0;
    int curY = 0;
    dic<char, pair<int, int>> dist =
    {
        {'D',{1,0}}, {'U',{-1,0}}, {'R',{0,1}},{'L',{0,-1}}
    };
    for (char c : cmd)
    {
        int nx = curX + dist[c].first;
        int ny = curY + dist[c].second;

        if (nx < 0 || nx >= n || ny < 0 || ny >= n)
            continue;
        
        
        if (c == 'D' || c == 'U')
        {
            if (board[curX][curY] == 0)
                board[curX][curY] = 1;
            else if (board[curX][curY] == 2)
                board[curX][curY] = 3;

            if (board[nx][ny] == 0)
                board[nx][ny] = 1;
            else if (board[nx][ny] == 2)
                board[nx][ny] = 3;
        }
        else if (c == 'L' || c == 'R')
        {
            if (board[curX][curY] == 0)
                board[curX][curY] = 2;
            else if (board[curX][curY] == 1)
                board[curX][curY] = 3;

            if (board[nx][ny] == 0)
                board[nx][ny] = 2;
            else if (board[nx][ny] == 1)
                board[nx][ny] = 3;
        }

        curX = nx;
        curY = ny;
    }

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (board[i][j] == 1)
                cout << '|';
            else if (board[i][j] == 2)
                cout << '-';
            else if (board[i][j] == 3)
                cout << '+';
            else
                cout << '.';
        }
        cout << '\n';
    }


    return 0;
}