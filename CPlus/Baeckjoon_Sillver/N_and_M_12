#include <iostream>
#include <algorithm>
#include <unordered_set>
#include <vector>
#include <string>
using namespace std;

int N, M;
vector<int> arr;
vector<vector<int>> result;
unordered_set<string> _set;

void generator(int cnt, vector<int>& selected, int index);

int main() 
{
    cin >> N >> M;

    arr.resize(N);
    for (int i = 0; i < N; ++i) 
        cin >> arr[i];

    sort(arr.begin(), arr.end());

    vector<int> selected(M);
    generator(0, selected, 0);

    for (const auto& tmp : result) 
    {
        for (int i : tmp) 
        {
            cout << i << " ";
        }
        cout << '\n';
    }

    return 0;
}

void generator(int cnt, vector<int>& selected, int index)
{
    if (cnt == M) 
    {
        vector<int> tmp(selected.begin(), selected.begin() + cnt);
        string str;
        for (int i : tmp) 
            str += to_string(i) + ' ';
        
        if (_set.find(str) == _set.end())
        {
            _set.insert(str);
            result.push_back(tmp);
        }
        return;
    }

    for (int i = index; i < N; ++i) 
    {
        selected[cnt] = arr[i];
        generator(cnt + 1, selected, i);
    }
}