#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>

using namespace std;

int N, M;
long long answer = -1;
vector<int> arr;

void backtracking(long long val, int idx, int cnt)
{
    if (cnt > M)
        return;
    if (cnt <= M)
    {
        if (val > answer)
            answer = val;
    }

    if (idx + 1 < N+1)
    {
        backtracking(val + arr[idx + 1], idx + 1, cnt + 1);
    }

    if (idx + 2 < N+1)
    {
        backtracking(val / 2 + arr[idx + 2], idx + 2, cnt + 1);
    }
}

int main()
{
    cin >> N >> M;
    arr.resize(N + 1);

    for (int i = 1; i <= N; i++)
    {
        cin >> arr[i];
    }

    backtracking(1, 0, 0);
    cout << answer;

    return 0;
}