#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int n;
vector<int> N;

int BinarySearch(int x);

int main() 
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    cin >> n;
    N.resize(n);

    for (int i = 0; i < n; i++) 
        cin >> N[i];

    int m;
    cin >> m;

    vector<int> M(m);

    for (int i = 0; i < m; i++) 
        cin >> M[i];
    
    sort(N.begin(), N.end());

    for (int i : M) 
        cout << BinarySearch(i) << " ";
    

    return 0;
}


int BinarySearch(int x)
{
    int low = 0;
    int high = n - 1;

    while (low <= high)
    {
        int mid = (low + high) / 2;
        if (N[mid] == x)
            return 1;
        else if (x < N[mid])
            high = mid - 1;
        else
            low = mid + 1;

    }

    return 0;
}