#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

int main() {
    int N;
    cin >> N;
    vector<vector<int>> checkPoint(N, vector<int>(2));
    int distance = 0;
    int min_distance = INT_MAX;

    // 입력을 받아서 checkPoint 배열에 저장하고, 초기 이동 거리(distance)를 계산합니다.
    for (int i = 0; i < N; i++) 
    {
        int x, y;
        cin >> x >> y;
        checkPoint[i][0] = x;
        checkPoint[i][1] = y;

        if (i >= 1) 
            // 이전 지점과의 거리를 더합니다.
            distance += abs(checkPoint[i][0] - checkPoint[i - 1][0]) + abs(checkPoint[i][1] - checkPoint[i - 1][1]);
        
    }

    // 각 지점에서 점프를 했을 때의 최소 거리를 계산합니다.
    for (int i = 1; i < N - 1; i++) 
    {
        int original = abs(checkPoint[i][0] - checkPoint[i - 1][0]) +
            abs(checkPoint[i][1] - checkPoint[i - 1][1]) +
            abs(checkPoint[i][0] - checkPoint[i + 1][0]) +
            abs(checkPoint[i][1] - checkPoint[i + 1][1]);

        int jump = abs(checkPoint[i - 1][0] - checkPoint[i + 1][0]) +
            abs(checkPoint[i - 1][1] - checkPoint[i + 1][1]);

        // 최소 거리를 업데이트합니다.
        min_distance = min(min_distance, distance - original + jump);
    }

    // 최소 거리 출력
    cout << min_distance << endl;

    return 0;
}