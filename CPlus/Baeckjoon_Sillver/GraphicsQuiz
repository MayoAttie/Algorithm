#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_map>
#include <string>
#include <climits>
using namespace std;

bool comparer(pair<int, int>& a, pair<int, int>& b)
{
    if (a.second != b.second)
        return a.second > b.second;
    else
        return a.first < b.first;
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int n;
    cin >> n;

    vector<vector<int>> dp(n, vector<int>(5, 0));

    for (int i = 0; i < n; i++)
    {
        int a, b;
        cin >> a >> b;

        dp[i][a - 1]++;
        dp[i][b - 1]++;
    }

    vector<pair<int, int>> answer;

    for (int i = 0; i < 5; i++)
    {
        int sum = 0;
        int ans = 0;

        for (int j = 0; j < n; j++)
        {
            int next = dp[j][i] > 0 ? 1 : 0;
            if (next == 0)
                sum = 0;
            else
                sum += next;
            ans = max(ans, sum);    
        }
        answer.push_back({i+1, ans});
    }

    sort(answer.begin(), answer.end(),comparer);
    cout << answer[0].second << ' ' << answer[0].first;
}