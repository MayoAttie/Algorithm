#include <iostream>;i++
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <string>
#include <strstream>
using namespace std;

vector<vector<vector<int>>> magicResults;
vector<bool> isVisited(10, false);

bool isMagic(const vector<vector<int>>& arr)
{
    int target = arr[0][0] + arr[0][1] + arr[0][2];

    for (int i = 0; i < 3; i++) {
        if (arr[i][0] + arr[i][1] + arr[i][2] != target) 
            return false; 
        if (arr[0][i] + arr[1][i] + arr[2][i] != target) 
            return false; 
    }

    if (arr[0][0] + arr[1][1] + arr[2][2] != target) 
        return false; 
    if (arr[0][2] + arr[1][1] + arr[2][0] != target) 
        return false; 

    return true;
}

void generator(vector<vector<int>>& arr, int idx)
{
    if (idx == 9)
    {
        if (isMagic(arr))
            magicResults.push_back(arr);
        
        return;;
    }

    int row = idx / 3;
    int col = idx % 3;
    for (int i = 1; i <= 9; i++)
    {
        if (!isVisited[i])
        {
            isVisited[i] = true;
            arr[row][col] = i;
            generator(arr, idx+1);
            isVisited[i] = false;
        }
    }
}

int calCost(vector<vector<int>>& a, vector<vector<int>>& b)
{
    int cost = 0;
    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            cost += abs(a[i][j] - b[i][j]);
        }
    }
    return cost;
}


int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
 
    vector<vector<int>> arr(3, vector<int>(3));
    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            cin >> arr[i][j];
        }
    }
    
    int answer = 987654321;
    vector<vector<int>> tmp(3, vector<int>(3,0));
    generator(tmp,0);

    for (auto& i : magicResults)
    {
        answer = min(answer, calCost(arr, i));
    }

    cout << answer;
    

    return 0;
}