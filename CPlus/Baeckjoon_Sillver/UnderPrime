#include <iostream>
#include <vector>
#include <unordered_set>
using namespace std;

unordered_set<int> set;

void Sieve(int n)
{
	vector<int> arr(n + 1, 1);
	arr[0] = arr[1] = 0;
	for (int i = 2; i * i <= n; i++)
	{
		if (arr[i])
		{
			for (int j = i * i; j <= n; j += i)
			{
				arr[j] = 0;
			}
		}
	}

	for (int i = 2; i <= n; i++)
	{
		if (arr[i])
			set.insert(i);
	}
}

bool solution(int num)
{
	vector<int> factors;
	while (num%2 ==0)
	{
		factors.push_back(2);
		num /= 2;
	}

	for (int i = 3; i * i <= num; i += 2)
	{
		while (num % i == 0)
		{
			factors.push_back(i);
			num /= i;
		}
	}
	if (num > 2)
	{
		factors.push_back(num);
	}
	int len = factors.size();
	if (set.find(len) == set.end())
		return false;
	else
		return true;
}

int main()
{
	int A, B;
	cin >> A >> B;

	Sieve(100000);

	int cnt = 0;
	for (int i = A; i <= B; i++)
	{
		if (solution(i))
			cnt++;
	}
	cout << cnt;
}