#include <iostream>
#include <unordered_map>
#include <string>
#include <algorithm>
#include <vector>
#include <set>
#include <cctype>
using namespace std;

int dx[8] = { 1,0,-1,0,1,1,-1,-1 };
int dy[8] = { 0,1,0,-1,1,-1,-1,1 };

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    int n;
    cin >> n;
    vector<vector<char>> board(n, vector<char>(n));

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            cin >> board[i][j];
        }
    }

    vector<vector<char>> answer(n, vector<char>(n));

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (isdigit(board[i][j]))
            {
                answer[i][j] = '*';
            }
            else
            {
                int num = 0;
                for (int d = 0; d < 8; d++)
                {
                    int nx = i + dx[d];
                    int ny = j + dy[d];
                    if (nx >= 0 && nx < n && ny >= 0 && ny < n)
                    {
                        if (isdigit(board[nx][ny]))
                        {
                            num += (board[nx][ny] - '0');
                        }
                    }
                }
                if (num < 10)
                    answer[i][j] = num + '0';
                else
                    answer[i][j] = 'M';
            }
        }
    }

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            cout << answer[i][j];
        }
        cout << '\n';
    }



    return 0;
}