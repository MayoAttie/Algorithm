#include <iostream>
#include <vector>

using namespace std;

vector<vector<int>> tree;
vector<int> depth;
vector<int> values;

void DFS(int node, int curDepth);

int main()
{
    int n, k;
    cin >> n >> k;
    tree.resize(n);
    depth.resize(n, 0);
    values.resize(n);

    for(int i = 0; i < n - 1; i++)
    {
        int a, b;
        cin >> a >> b;
        tree[a].push_back(b);
    }

    for(int i = 0; i < n; i++)
        cin >> values[i];

    DFS(0, 0);

    int answer = -1;

    for(int i = 0; i < n; i++)
    {
        if(values[i] == k)
        {
            answer = depth[i];
            break;
        }
    }
    cout << answer;

    return 0;
}

void DFS(int node, int curDepth)
{
    depth[node] = curDepth;

    for(int child : tree[node])
        DFS(child, curDepth + 1);
}