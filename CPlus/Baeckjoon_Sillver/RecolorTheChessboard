#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() 
{
    int N, M;
    cin >> N >> M;

    vector<string> origin;
    vector<int> count;

    for (int i = 0; i < N; ++i) 
    {
        string row;
        cin >> row;
        origin.push_back(row);
    }

    for (int a = 0; a < N - 7; ++a) 
    {
        for (int b = 0; b < M - 7; ++b) 
        {
            int index1 = 0;
            int index2 = 0;

            for (int i = a; i < a + 8; ++i) 
            {
                for (int j = b; j < b + 8; ++j) 
                {
                    if ((i + j) % 2 == 0) 
                    {
                        if (origin[i][j] != 'W')
                            index1 += 1;
                        if (origin[i][j] != 'B')
                            index2 += 1;
                    }
                    else 
                    {
                        if (origin[i][j] != 'B')
                            index1 += 1;
                        if (origin[i][j] != 'W')
                            index2 += 1;
                    }
                }
            }

            count.push_back(min(index1, index2));
        }
    }


    int result = *min_element(count.begin(), count.end());
    std::cout << result << endl;

    return 0;
}