#include <iostream>
#include <vector>

using namespace std;

int main() 
{
    int N, M;
    cin >> N >> M;

    // 2차원 누적 합 배열 dp를 생성
    vector<vector<int>> dp(N, vector<int>(N));

    // 표의 각 셀의 값을 입력받고 동시에 dp 배열에 누적 합을 계산
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            cin >> dp[i][j];

            // (i, j) 위치에 있는 값에 이전 행과 열의 누적 합을 더함
            if (i > 0)
                dp[i][j] += dp[i - 1][j];
            if (j > 0)
                dp[i][j] += dp[i][j - 1];

            // 중복으로 더해진 부분 빼기
            if (i > 0 && j > 0)
                dp[i][j] -= dp[i - 1][j - 1];
        }
    }

    for (int i = 0; i < M; i++) {
        int x1, y1, x2, y2;
        cin >> x1 >> y1 >> x2 >> y2;
        x1--; y1--; x2--; y2--; // 인덱스를 0부터 시작하도록 조정

        int result = dp[x2][y2];

        // (x1, y1)부터 (x2, y2)까지의 합 계산
        if (x1 > 0)
            result -= dp[x1 - 1][y2];
        if (y1 > 0)
            result -= dp[x2][y1 - 1];
        if (x1 > 0 && y1 > 0)
            result += dp[x1 - 1][y1 - 1];

        // 결과 출력
        cout << result << "\n";
    }

    return 0;
}