#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void dfs(int now, vector<int>& graph, vector<bool>& visited)
{
	visited[now] = true;
	int next = graph[now];
	if (!visited[next])
		dfs(next, graph, visited);
}

int main()
{
	int T;
	cin >> T;
	while (T--)
	{
		int N;
		cin >> N;
		vector<int>arr(N+1);
		vector<bool>visited(N + 1);
		for (int i = 1; i <= N; i++)
		{
			cin >> arr[i];
		}

		int cnt = 0;
		for (int i = 1; i <= N; i++)
		{
			if (!visited[i])
			{
				dfs(i,arr,visited);
				cnt++;
			}
		}

		cout << cnt << '\n';
	}
}