#include <iostream>
#include <cmath>
#include <vector>

using namespace std;

vector<int> sieveEt(int n)
{
	vector<int> arr(n + 1, 1);
	vector<int> primeArr;

	arr[0] = arr[1] = 0;

	for (int i = 2; i * i <= n; i++)
	{
		if (arr[i])
		{
			for (int j = i * i; j <= n; j += i)
			{
				arr[j] = 0;
			}
		}
	}

	for (int i = 2; i <= n; i++)
	{
		if (arr[i])
			primeArr.push_back(i);
	}

	return primeArr;
}

int main()
{
	int T;
	cin >> T;

	vector<int> primes = sieveEt(1000);
	int len = primes.size();
	while (T--)
	{
		int N;
		cin >> N;

		bool isFind = false;
		int a, b, c;
		for (int i = 0; i < len && !isFind; i++)
		{
			for (int j = 0; j < len && !isFind; j++)
			{
				for (int m = 0; m < len && !isFind; m++)
				{
					a = primes[i];
					b = primes[j];
					c = primes[m];

					if (a + b + c == N)
					{
						cout << a << " " << b << " " << c << '\n';
						isFind = true;
					}
				}
			}
		}

		if (!isFind)
			cout << 0 << '\n';
	}
}