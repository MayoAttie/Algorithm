#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
using namespace std;

vector<int> FindDvisor(int N)
{
	vector<int> result;

	for (int i = 1; i <= sqrt(N); i++)
	{
		if (N % i == 0)
		{
			result.push_back(i);

			if (i != N / i)
				result.push_back(N / i);
		}
	}
	return result;
}

int main()
{

	while (true)
	{
		int N;
		cin >> N;

		if (N == -1)
			break;

		vector<int> arr = FindDvisor(N);
		sort(arr.begin(), arr.end());
		int sum = 0;

		cout << N;

		for (int i = 0; i < arr.size()-1; ++i) 
		{
			sum += arr[i];
		}

		if (sum == N)
		{
			cout << " = ";
			cout << arr[0];
			for (int i = 1; i < arr.size()-1; ++i)
			{
				cout << " + " << arr[i];
			}
			cout << endl;
		}
		else 
			cout << " is NOT perfect." << endl;
	}
}