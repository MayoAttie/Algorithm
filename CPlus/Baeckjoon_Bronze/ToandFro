#include <iostream>
#include <vector>
#include <algorithm>
#include <cctype>
#include <string>
using namespace std;

int main() 
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int n;

    while (cin >> n)
    {
        if (n == 0)
            break;

        string cryp, plain;
        cin >> cryp;

        int idx = 0, len = cryp.size() / n;
        vector<string> matrix(len,string(n, ' '));
        bool isToLeft = true;   // start left
        for (int i = 0; i < len; i++)
        {
            if (isToLeft)
            {
                for (int j = 0; j < n; j++)
                {
                    matrix[i][j] = cryp[idx++];
                }
            }
            else
            {
                for (int j = n-1; j >=0; j--)
                {
                    matrix[i][j] = cryp[idx++];
                }
            }
            isToLeft = !isToLeft;
        }

        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < len; j++)
            {
                plain += matrix[j][i];
            }
        }

        cout << plain << '\n';
    }

    return 0;
}