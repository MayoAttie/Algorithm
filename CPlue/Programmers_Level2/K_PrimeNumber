#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
using namespace std;

string ToK_Decimal(int n, int k)
{
    string result;
    while(n > 0)
    {
        result += to_string(n % k);
        n /= k;
    }
    reverse(result.begin(), result.end());
    return result;
}

bool isPrime(long long n)
{
    if(n <= 1) return false;
    
    for(int i = 2; i <= sqrt(n); i++)
    {
        if(n % i == 0)
            return false;
    }
    
    return true;
}

int solution(int n, int k) {
    int answer = 0;
    string num = ToK_Decimal(n, k);
    long long start = 0;
    while(start < num.size())
    {
        long long end = num.find('0', start);
        if(end == string::npos) end = num.size();
        string sub = num.substr(start, end - start);
        if(sub != "" && isPrime(stol(sub)))
        {
            answer++;
        }
        start = end + 1;
    }
    return answer;
}
