#include <iostream>
#include <vector>

using namespace std;

const int MOD = 1000000007;

int main() {
    int D;
    cin >> D;

    // dp 배열을 선언하고 초기화합니다. dp[i]는 i번 건물에 도착한 경우의 수를 저장합니다.
    vector<long> dp(8, 0);
    dp[0] = 1; // 첫 번째 건물(정보대)에 도착한 경우의 수를 1로 초기화합니다.

    for (int i = 0; i < D; i++) {
        vector<long> tmp(8, 0);

        // 각 건물에서 가능한 이전 건물로의 이동을 고려하여 dp 배열을 갱신합니다.
        tmp[0] = (dp[1] + dp[2]) % MOD;
        tmp[1] = (dp[0] + dp[2] + dp[3]) % MOD;
        tmp[2] = (dp[0] + dp[1] + dp[3] + dp[4]) % MOD;
        tmp[3] = (dp[1] + dp[2] + dp[4] + dp[5]) % MOD;
        tmp[4] = (dp[2] + dp[3] + dp[5] + dp[6]) % MOD;
        tmp[5] = (dp[3] + dp[4] + dp[7]) % MOD;
        tmp[6] = (dp[4] + dp[7]) % MOD;
        tmp[7] = (dp[5] + dp[6]) % MOD;

        dp = tmp; // dp 배열을 갱신합니다.
    }

    // D분 동안 8번 건물(본대)에 도착한 경우의 수를 출력합니다.
    cout << dp[0] << endl;

    return 0;
}

/**
 *  1 - 2,4
    2 - 1,3,4
    3 - 2,4,5,6
    4 - 1,2,3,6
    5 - 3,6,7
    6 - 3,4,5,8
    7 - 5,8
    8 - 6,7
 * 
*/