#include <iostream>
#include <vector>

using namespace std;

int main() {
    int N, M;
    cin >> N >> M;

    vector<vector<int>> square(N, vector<int>(M));

    for (int i = 0; i < N; i++) {
        string str;
        cin >> str;
        for (int j = 0; j < M; j++) {
            square[i][j] = str[j] - '0';
        }
    }

    int max_square = 1;
    vector<pair<int, int>> move = { {1, 0}, {1, 1}, {0, 1} };

    for (int i = 0; i < N; i++) 
    {
        for (int j = 0; j < M; j++) 
        {
            for (int k = 1; k < N; k++) 
            {
                int cnt = 0;
                int temp = square[i][j];
                for (const pair<int, int>& dir : move) 
                {
                    int dy = dir.first;
                    int dx = dir.second;
                    int ny = i + dy * k;
                    int nx = j + dx * k;
                    if (ny >= 0 && ny < N && nx >= 0 && nx < M) 
                    {
                        if (square[ny][nx] == temp) 
                            cnt++;
                    }
                }

                if (cnt == 3) 
                    max_square = max(max_square, (k + 1) * (k + 1));
            }
        }
    }

    cout << max_square << endl;

    return 0;
}