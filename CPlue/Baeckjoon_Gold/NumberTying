#include <iostream>
#include <queue>
using namespace std;

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    int N;
    cin >> N;
    priority_queue<int> plusPq;  // 우선순위 큐 선언
    priority_queue<int, vector<int>, greater<int>> minusPq;  // 우선순위 큐 선언
    int one = 0;  // 1의 개수 저장 변수
    int zero = 0;  // 0의 개수 저장 변수
    
    // N개의 값을 입력받아 적절한 큐에 삽입
    for (int i = 0; i < N; i++)
    {
        int data;
        cin >> data;
        if (data > 1)
            plusPq.push(data);
        else if (data == 1)
            one++;
        else if (data == 0)
            zero++;
        else
            minusPq.push(data);
    }
    
    int sum = 0;  // 결과 값 저장 변수
    
    // plusPq에서 두 개의 값을 뽑아 곱한 후 sum에 더하기
    while (plusPq.size() > 1)
    {
        int first = plusPq.top();
        plusPq.pop();
        int second = plusPq.top();
        plusPq.pop();
        sum += first * second;
    }
    if (!plusPq.empty())
    {
        sum += plusPq.top();
        plusPq.pop();        
    }
    
    // minusPq에서 두 개의 값을 뽑아 곱한 후 sum에 더하기
    while (minusPq.size() > 1)
    {
        int first = minusPq.top();
        minusPq.pop();
        int second = minusPq.top();
        minusPq.pop();
        sum += first * second;
    }
    if (!minusPq.empty())
    {
        // zero가 0이면 가장 작은 값을 sum에서 빼기
        if (zero == 0)
        {
            sum -= minusPq.top();
            minusPq.pop();
        }
    }
    sum += one;  // 1의 개수를 sum에 더하기
    cout << sum << "\n";  // 결과 출력
}