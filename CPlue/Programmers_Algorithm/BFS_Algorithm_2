#include <string>
#include <vector>
#include <queue>
#include <unordered_map>
using namespace std;

int solution(string begin, string target, vector<string> words) {
    int answer = 0;
    queue<string> que;
    unordered_map<string, int> visited;

    que.push(begin);
    visited[begin] = 0;

    while (!que.empty()) 
    {
        string current = que.front();
        que.pop();

        if (current == target)
        {
            answer = visited[current];
            break;
        }

        for (string word : words) 
        {
            int diffCount = 0;
            for (int i = 0; i < word.length(); i++)
            {
                if (current[i] != word[i]) 
                    diffCount++;
            }

            if (diffCount == 1 && !visited.count(word))
            {
                visited[word] = visited[current] + 1;
                que.push(word);
            }
        }
    }

    return answer;
}