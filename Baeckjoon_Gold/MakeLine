#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int main()
{
    int students;               // 학생 수
    int compares;               // 비교 횟수
    vector<vector<int>> graph;  // 그래프의 인접 리스트 표현
    vector<int> indegree;       // 각 정점의 진입 차수를 저장하는 배열
    
    cin >> students >> compares;
    
    graph.resize(students+1);   // 그래프와 진입 차수 배열의 크기를 'students' 개수만큼 조정
    indegree.resize(students+1);
    
    for(int i=0; i<compares; i++)
    {
        int first;              // 첫 번째 학생 번호
        int second;             // 두 번째 학생 번호
        cin >> first >> second;
        graph[first].push_back(second);  // 그래프에서 'first'를 가리키는 간선으로 'second'를 추가
        indegree[second]++;              // 'second' 정점의 진입 차수 증가
    }
    
    queue<int> que;   // 위상 정렬을 수행하기 위한 큐
    
    // 진입 차수가 0인 정점을 큐에 초기화
    for(int i=1; i<=students; i++)
    {
        if(indegree[i] == 0)
            que.push(i);
    }
    
    // 위상 정렬 수행
    while(!que.empty())
    {
        int data = que.front();
        que.pop();
        
        cout << data << " ";   // 현재 정점 출력
        
        // 인접한 정점들의 진입 차수를 감소시키고, 진입 차수가 0이 되면 큐에 추가
        for(int next : graph[data])
        {
            indegree[next]--;
            if(indegree[next] == 0)
                que.push(next);
        }
    }
}